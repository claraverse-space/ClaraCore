name: Build and Push Docker Containers

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to use'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        variant: [cuda, rocm]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Linux binary from release
        if: github.event_name == 'release'
        run: |
          mkdir -p dist
          wget -O dist/claracore-linux-amd64 \
            "https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/claracore-linux-amd64"
          chmod +x dist/claracore-linux-amd64

      - name: Download Linux binary (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          mkdir -p dist
          wget -O dist/claracore-linux-amd64 \
            "https://github.com/${{ github.repository }}/releases/latest/download/claracore-linux-amd64"
          chmod +x dist/claracore-linux-amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ matrix.variant }},onlatest=true
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.variant }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Image size report
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.variant }}
          SIZE=$(docker images ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --format "{{.Size}}" | head -1)
          echo "### 🐳 ${{ matrix.variant }} Container Size: $SIZE" >> $GITHUB_STEP_SUMMARY
